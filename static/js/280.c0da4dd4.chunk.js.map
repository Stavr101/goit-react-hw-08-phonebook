{"version":3,"file":"static/js/280.c0da4dd4.chunk.js","mappings":"iNAAaA,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,E,mBCOjBC,EAAe,WAC1B,OAAgCC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAsBC,EAAtB,KACQC,GAASC,EAAAA,EAAAA,MAATD,KACFE,GAAWC,EAAAA,EAAAA,KAAY,SAAAT,GAAK,OCND,SAACA,EAAOQ,GACzC,IAAMP,EAASF,EAAUC,GACzB,IAAKC,EACH,OAAOO,EAIT,IAAME,EAAoBT,EAAOU,oBAC3BC,EAAmBJ,EAASP,QAAO,YAAsB,IAAnBY,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAKhD,OAJwBD,EAAKF,oBAEXI,SAASL,IACzBI,EAAMC,SAASL,EAElB,IAED,OADAM,QAAQC,IAAIL,GACLA,CACR,CDXuCM,CAAoBlB,EAAOM,EAA/B,IAKlC,GAAIA,EAAM,CACR,IAAMa,EAAWX,EAASY,KAAI,YAA0B,IAAvBP,EAAsB,EAAtBA,KAAMQ,EAAgB,EAAhBA,GAAIP,EAAY,EAAZA,MACzC,OACE,0BACGD,EADH,KACWC,GACT,mBACEQ,KAAK,SACLC,QAAS,kBAVK,SAAAF,GACtBjB,EAAciB,EACf,CAQwBG,CAAgBH,EAAtB,EACTI,SAAUpB,EAAOqB,UAHnB,sBAFOL,EAWZ,IAED,OAAO,wBAAKF,GACb,CACF,E,SE9BYQ,EAAS,WACpB,IAAM1B,GAASQ,EAAAA,EAAAA,IAAYV,GACrB6B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,mBAAOC,QAAQ,SAAf,mCAEE,kBAAOR,KAAK,OAAOT,KAAK,SAASkB,SARhB,SAAAC,GACnB,IAAQC,EAAUD,EAAEE,OAAZD,MAERL,GAASO,EAAAA,EAAAA,GAAUF,GACpB,EAI4DA,MAAOhC,MAGrE,E,6BCjBD,EAA2B,yBAA3B,EAA6D,uBCC9C,SAASmC,IACtB,OACE,gBAAKC,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,KAGrB,CCFM,IAAMC,EAAiB,WAC5B,IAAQjC,GAASC,EAAAA,EAAAA,MAATD,KAER,GAAoCkC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBf,EAArB,KAAqBA,UAEfgB,EAAiB,mCAAG,WAAMC,GAAN,6EACxBA,EAAMC,iBACAC,EAAOF,EAAMG,cAEXjC,EAAgBgC,EAAhBhC,KAAMC,EAAU+B,EAAV/B,MACRiC,EAAU,CACdlC,KAAMA,EAAKoB,MACXnB,MAAOA,EAAMmB,OAGf3B,EAAK0C,MACH,SAAA1C,GAAI,OAAIA,EAAKO,OAASkC,EAAQlC,MAAQP,EAAKQ,QAAUiC,EAAQjC,KAAzD,IAEFmC,MAAM,GAAD,OAAIF,EAAQlC,KAAZ,cAAsBkC,EAAQjC,MAA9B,6BACL2B,EAAWM,GAEfJ,EAAMG,cAAcI,QAhBI,2CAAH,sDAmBvB,OACE,kBAAMC,SAAUT,EAAhB,WACE,mBAAOZ,QAAQ,OAAf,kBAEE,kBACER,KAAK,OACLT,KAAK,OACLuC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOxB,QAAQ,QAAf,mBAEE,kBACER,KAAK,MACLT,KAAK,QACLuC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,oBAAQhC,KAAK,SAASG,SAAUC,EAAhC,UACGA,IAAa,SAACU,EAAD,IADhB,mBAML,ECnDc,SAASmB,IACtB,OACE,4BACE,uCACA,SAAChB,EAAD,KAEA,sCACA,SAACZ,EAAD,KACA,SAACzB,EAAD,MAGL,C","sources":["redux/filters/filterSelector.js","components/Phonebook/ContactsList.jsx","redux/contacts/useContactSelector.js","components/Phonebook/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/loader/Loader.module.css?aa4a","shared/loader/Loader.jsx","components/Phonebook/FormAddContact.jsx","pages/Contacts.js"],"sourcesContent":["export const getFilter = state => state.filter;\n// console.log(getFilter());\n","import { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/useContactSelector';\nimport {\n  useDeleteContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contactsApiSlice';\n\nexport const ContactsList = () => {\n  const [deleteContact, result] = useDeleteContactsMutation();\n  const { data } = useGetContactsQuery();\n  const contacts = useSelector(state => getFilteredContacts(state, data));\n\n  const onRemoveContact = id => {\n    deleteContact(id);\n  };\n  if (data) {\n    const elements = contacts.map(({ name, id, phone }) => {\n      return (\n        <li key={id}>\n          {name}: {phone}\n          <button\n            type=\"button\"\n            onClick={() => onRemoveContact(id)}\n            disabled={result.isLoading}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n\n    return <ul>{elements}</ul>;\n  }\n};\n","import { getFilter } from 'redux/filters/filterSelector';\n\nexport const getContacts = store => store.contacts;\n\nexport const getFilteredContacts = (state, contacts) => {\n  const filter = getFilter(state);\n  if (!filter) {\n    return contacts;\n  }\n  // console.log(contacts);\n  // console.log(filter);\n  const normalaisedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.filter(({ name, phone }) => {\n    const normalaisedName = name.toLocaleLowerCase();\n    const result =\n      normalaisedName.includes(normalaisedFilter) ||\n      phone.includes(normalaisedFilter);\n    return result;\n  });\n  console.log(filteredContacts);\n  return filteredContacts;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filters/filterSelector';\nimport { setFilter } from 'redux/filters/filtersSlice';\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n\n    dispatch(setFilter(value));\n  };\n  return (\n    <label htmlFor=\"filter\">\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={handleChange} value={filter} />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__h8xP2\",\"loader\":\"Loader_loader__m2CXA\",\"rotation\":\"Loader_rotation__QxaXd\"};","import css from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={css.backdrop}>\n      <div className={css.loader}></div>\n    </div>\n  );\n}\n","import {\n  useAddContactsMutation,\n  useGetContactsQuery,\n} from 'redux/contactsApiSlice';\nimport Loader from 'shared/loader/Loader';\n\nexport const FormAddContact = () => {\n  const { data } = useGetContactsQuery();\n  // console.log(data);\n  const [addContact, { isLoading }] = useAddContactsMutation();\n\n  const handleAddContacts = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    const { name, phone } = form;\n    const contact = {\n      name: name.value,\n      phone: phone.value,\n    };\n\n    data.find(\n      data => data.name === contact.name || data.phone === contact.phone\n    )\n      ? alert(`${contact.name} - ${contact.phone} is already in contacts.`)\n      : addContact(contact);\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleAddContacts}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"phone\">\n        Phone\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading && <Loader />}\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// import { FormAddContact } from './FormAddContact';\nimport { ContactsList } from 'components/Phonebook/ContactsList';\nimport { Filter } from 'components/Phonebook/Filter';\nimport { FormAddContact } from 'components/Phonebook/FormAddContact';\n// import { ContactsList } from './ContactsList';\n// import { Filter } from './Filter';\n\nexport default function Phonebook() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <FormAddContact />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["getFilter","state","filter","ContactsList","useDeleteContactsMutation","deleteContact","result","data","useGetContactsQuery","contacts","useSelector","normalaisedFilter","toLocaleLowerCase","filteredContacts","name","phone","includes","console","log","getFilteredContacts","elements","map","id","type","onClick","onRemoveContact","disabled","isLoading","Filter","dispatch","useDispatch","htmlFor","onChange","e","value","target","setFilter","Loader","className","css","FormAddContact","useAddContactsMutation","addContact","handleAddContacts","event","preventDefault","form","currentTarget","contact","find","alert","reset","onSubmit","pattern","title","required","Phonebook"],"sourceRoot":""}